getwd()
setwd("..")
getwd()
document("bbay.fcast")
library(devtools)
document("bbay.fcast")
install("bbay.fcast")
?f.cast.tbl
library(bbay.fcast)
getwd()
setwd("..")
document("bbay.fcast")
library(devtools)
document("bbay.fcast")
getwd()
setwd("..")
getwd()
install("bbay.fcast")
library(devtools)
install("bbay.fcast")
search()
library(bbay.fcast)
getwd()
setwd("..")
library(devtools)
document("bbay.fcast")
getwd()
setwd("..")
library(devtools)
document("bbay.fcast")
f.cast.age <- "age.13"
sibling <- "age.12"
f.cast.yr <- 2020
riv.name <- "KVICHAK"
start.yr <-1973
model <- "average"
#read brood tables into memory
riv <- read_excel(data,
sheet = riv.name , col_types = "numeric", skip = 1)
t <- c("brood.year","age.01","age.02","age.03","age.04","age.05","age.11","age.12",
"age.13","age.14","age.15","age.21","age.22","age.23","age.24","age.31","age.32",
"age.33","age.34","escapement","recruits","r.per.s")
tt <- as.vector(t)
names(riv)<-t
riv$return.year <- riv$brood.year + as.numeric(substr(f.cast.age,5,5)) + as.numeric(substr(f.cast.age,6,6)) + 1
dat <- riv[(riv$brood.year >= start.yr & riv$return.year <= f.cast.yr),
c("brood.year","return.year","escapement",sibling,f.cast.age)]
names(dat) <- c("brood.year","return.year","spawners","sibling","f.cast.age")
# create empty data frame to collect stats
a <- nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
suppressMessages(library(readxl))
suppressMessages(library(knitr))
suppressMessages(library(lubridate))
suppressMessages(library(ggplot2))
suppressMessages(library(kableExtra))
suppressMessages(library(useful))
suppressMessages(library(dplyr))
suppressMessages(library(pander))
suppressMessages(library(plotly))
suppressMessages(library(formattable))
suppressMessages(library(devtools))
install_github("GregBuck/bbay.fcast")
suppressMessages(library(bbay.fcast))
#read brood tables into memory
riv <- read_excel(data,
sheet = riv.name , col_types = "numeric", skip = 1)
t <- c("brood.year","age.01","age.02","age.03","age.04","age.05","age.11","age.12",
"age.13","age.14","age.15","age.21","age.22","age.23","age.24","age.31","age.32",
"age.33","age.34","escapement","recruits","r.per.s")
tt <- as.vector(t)
names(riv)<-t
riv$return.year <- riv$brood.year + as.numeric(substr(f.cast.age,5,5)) + as.numeric(substr(f.cast.age,6,6)) + 1
dat <- riv[(riv$brood.year >= start.yr & riv$return.year <= f.cast.yr),
c("brood.year","return.year","escapement",sibling,f.cast.age)]
names(dat) <- c("brood.year","return.year","spawners","sibling","f.cast.age")
# create empty data frame to collect stats
a <- nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
# set variables
f.cast.age <- "age.12"
sibling <- "age.11"
f.cast.yr <- 2020
riv.name <- "KVICHAK"
start.yr <- 1972
model <- "sibling"
data <- "C:/inseason/2019_BBay_Brood_Tables.xlsx"
data2 <- "C:/inseason/2019_BBay_Return_Tables.xlsx"
f.cast.age <- "age.12"
sibling <- "age.11"
model <- "sibling"
#read brood tables into memory
riv <- read_excel(data,
sheet = riv.name , col_types = "numeric", skip = 1)
t <- c("brood.year","age.01","age.02","age.03","age.04","age.05","age.11","age.12",
"age.13","age.14","age.15","age.21","age.22","age.23","age.24","age.31","age.32",
"age.33","age.34","escapement","recruits","r.per.s")
tt <- as.vector(t)
names(riv)<-t
riv$return.year <- riv$brood.year + as.numeric(substr(f.cast.age,5,5)) + as.numeric(substr(f.cast.age,6,6)) + 1
dat <- riv[(riv$brood.year >= start.yr & riv$return.year <= f.cast.yr),
c("brood.year","return.year","escapement",sibling,f.cast.age)]
names(dat) <- c("brood.year","return.year","spawners","sibling","f.cast.age")
# create empty data frame to collect stats
a <- nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
df
tmp
dat
as.data.frame(dat)
tmp <- dat[1:(nrow(dat)-i),]
df
nrow(df)
tmp
dat
as.data.frame(dat)
?rollify
search()
(.39+.664+.526+.933+.009)/5
library(tidyverse)
?rollify
lahman::batting
?rollmean
dat
dat %>%
mutate(forecast <- frollmean(dat$f.cast.age, n = 5))
library(data.table)
dat %>%
mutate(forecast <- frollmean(dat$f.cast.age, n = 5))
(1971913+531509+6047999+54668931+5940228)/5
(1971913+531509+6047999+5468931+5940228)/5
t <- dat %>%
mutate(forecast = frollmean(dat$f.cast.age, n = 5))
t
as.data.frame(t)
head(t)
t$forecast
length(t$forecast)
class(t$forecast)
as.vector(t$forecast)
a<-as.vector(t$forecast)
prepend(a,'NA', before = 1)
prepend(a,"", before = 1)
prepend(a,, before = 1)
a<-prepend(a,, before = 1)
a<-prepend(a,na, before = 1)
a<-prepend(a,0, before = 1)
a
a[1:length(a)]
cbind(t,a)
t
tail(t)
as.data.frame(t)
length(a)
a
a<-a[1:(length(a)-1)]
a
cbind(t,a)
model
if(model == "sibling"){
for (i in 0:9){
tmp <- dat[1:(nrow(dat)-i),]
df[a-i,"forecast"] <- sib.forecast(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"],
tmp[tmp$return.year==f.cast.yr-i,"sibling"])
df[a-i,"r.sq"] <- sib.rsquare(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
df[a-i,"p.value"] <- sib.pvalue(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
} # end for
# merge initial dataframe with stats dataframe
df <- df[1:(nrow(df)-1),]
master <- cbind(dat,df)
} # end if
master
# set variables
f.cast.age <- "age.12"
sibling <- "age.11"
f.cast.yr <- 2020
riv.name <- "KVICHAK"
start.yr <- 1972
model <- "sibling"
data <- "C:/inseason/2019_BBay_Brood_Tables.xlsx"
data2 <- "C:/inseason/2019_BBay_Return_Tables.xlsx"
f.cast.age <- "age.12"
sibling <- "age.11"
model <- "sibling"
####################################
## READ DATA INTO MEMORY AND SET VARIABLES
## Below is the code used to load brood tables into memory
####################################
suppressMessages(library(readxl))
suppressMessages(library(data.table))
suppressMessages(library(knitr))
suppressMessages(library(lubridate))
suppressMessages(library(ggplot2))
suppressMessages(library(kableExtra))
suppressMessages(library(useful))
suppressMessages(library(dplyr))
suppressMessages(library(pander))
suppressMessages(library(plotly))
suppressMessages(library(formattable))
suppressMessages(library(devtools))
install_github("GregBuck/bbay.fcast")
suppressMessages(library(bbay.fcast))
#read brood tables into memory
riv <- read_excel(data,
sheet = riv.name , col_types = "numeric", skip = 1)
t <- c("brood.year","age.01","age.02","age.03","age.04","age.05","age.11","age.12",
"age.13","age.14","age.15","age.21","age.22","age.23","age.24","age.31","age.32",
"age.33","age.34","escapement","recruits","r.per.s")
tt <- as.vector(t)
names(riv)<-t
riv$return.year <- riv$brood.year + as.numeric(substr(f.cast.age,5,5)) + as.numeric(substr(f.cast.age,6,6)) + 1
dat <- riv[(riv$brood.year >= start.yr & riv$return.year <= f.cast.yr),
c("brood.year","return.year","escapement",sibling,f.cast.age)]
names(dat) <- c("brood.year","return.year","spawners","sibling","f.cast.age")
# create empty data frame to collect stats
a <- nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
# loop through models collecting stats--SIBLING
if(model == "sibling"){
for (i in 0:9){
tmp <- dat[1:(nrow(dat)-i),]
df[a-i,"forecast"] <- sib.forecast(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"],
tmp[tmp$return.year==f.cast.yr-i,"sibling"])
df[a-i,"r.sq"] <- sib.rsquare(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
df[a-i,"p.value"] <- sib.pvalue(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
} # end for
# merge initial dataframe with stats dataframe
df <- df[1:(nrow(df)-1),]
master <- cbind(dat,df)
} # end if
master
t <- dat %>%
mutate(temp = frollmean(dat$f.cast.age, n = 5))
t
t <- dat %>%
mutate(temp = frollmean(dat$f.cast.age, n = 5))
a <- as.vector(t$temp)
b <- length(a)
a <- prepend(a,0,before = 1)
a <- a[1:(b - 1)]
master <- cbind(t,a)
master
t
tail(t)
t
# set variables
f.cast.age <- "age.12"
sibling <- "age.11"
f.cast.yr <- 2020
riv.name <- "KVICHAK"
start.yr <- 1972
model <- "sibling"
data <- "C:/inseason/2019_BBay_Brood_Tables.xlsx"
data2 <- "C:/inseason/2019_BBay_Return_Tables.xlsx"
f.cast.age <- "age.12"
sibling <- "age.11"
model <- "sibling"
####################################
## READ DATA INTO MEMORY AND SET VARIABLES
## Below is the code used to load brood tables into memory
####################################
suppressMessages(library(readxl))
suppressMessages(library(data.table))
suppressMessages(library(knitr))
suppressMessages(library(lubridate))
suppressMessages(library(ggplot2))
suppressMessages(library(kableExtra))
suppressMessages(library(useful))
suppressMessages(library(dplyr))
suppressMessages(library(pander))
suppressMessages(library(plotly))
suppressMessages(library(formattable))
suppressMessages(library(devtools))
install_github("GregBuck/bbay.fcast")
suppressMessages(library(bbay.fcast))
#read brood tables into memory
riv <- read_excel(data,
sheet = riv.name , col_types = "numeric", skip = 1)
t <- c("brood.year","age.01","age.02","age.03","age.04","age.05","age.11","age.12",
"age.13","age.14","age.15","age.21","age.22","age.23","age.24","age.31","age.32",
"age.33","age.34","escapement","recruits","r.per.s")
tt <- as.vector(t)
names(riv)<-t
riv$return.year <- riv$brood.year + as.numeric(substr(f.cast.age,5,5)) + as.numeric(substr(f.cast.age,6,6)) + 1
dat <- riv[(riv$brood.year >= start.yr & riv$return.year <= f.cast.yr),
c("brood.year","return.year","escapement",sibling,f.cast.age)]
names(dat) <- c("brood.year","return.year","spawners","sibling","f.cast.age")
# create empty data frame to collect stats
a <- nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
# loop through models collecting stats--SIBLING
if(model == "sibling"){
for (i in 0:9){
tmp <- dat[1:(nrow(dat)-i),]
df[a-i,"forecast"] <- sib.forecast(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"],
tmp[tmp$return.year==f.cast.yr-i,"sibling"])
df[a-i,"r.sq"] <- sib.rsquare(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
df[a-i,"p.value"] <- sib.pvalue(tmp[tmp$return.year <= f.cast.yr -1-i,"sibling"],
tmp[tmp$return.year <= f.cast.yr -1- i,"f.cast.age"])
} # end for
# merge initial dataframe with stats dataframe
df <- df[1:(nrow(df)-1),]
master <- cbind(dat,df)
} # end if
master
df
a
nrow(dat)
df <- data.frame(matrix(vector(), a + 1, 3,
dimnames=list(c(), c("r.sq", "p.value", "forecast"))),
stringsAsFactors=F)
df
dat
as.data.frame(dat)
t <- dat %>%
mutate(temp = frollmean(dat$f.cast.age, n = 5))
a <- as.vector(t$temp)
b <- length(a)
a <- prepend(a,0,before = 1)
a <- a[1:(b - 1)]
cbind(t,a)
library(rlang)
a
b
a <- prepend(a,0,before = 1)
a <- a[1:(b - 1)]
cbind(t,a)
a
install.packages(c("blogdown", "bookdown", "callr", "cli", "clipr", "cpp11", "DT", "htmlwidgets", "ps", "readr", "rlang", "servr", "survival", "tibble", "xfun"))
library(R2admb)
setup_admb(admb_home)
